var FastDeploy;
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/controls/fd-check-control.ts":
/*!******************************************!*\
  !*** ./src/controls/fd-check-control.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ FastDeployCheckControl)
/* harmony export */ });
class FastDeployCheckControl {
    constructor() { }
    init() {
        $('.fd-checkbox > span').on('click', checkControlOnClick);
        $('.fd-radio > span').on('click', checkControlOnClick);
    }
}
function checkControlOnClick(e) {
    e.stopPropagation();
    let el = e.currentTarget;
    if (el) {
        $(el).parent().children('input').trigger('click');
    }
}


/***/ }),

/***/ "./src/controls/fd-controls.ts":
/*!*************************************!*\
  !*** ./src/controls/fd-controls.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "initControls": () => (/* binding */ initControls)
/* harmony export */ });
/* harmony import */ var _fd_selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fd-selector */ "./src/controls/fd-selector.ts");
/* harmony import */ var _fd_input_tokens__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fd-input-tokens */ "./src/controls/fd-input-tokens.ts");
/* harmony import */ var _fd_check_control__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fd-check-control */ "./src/controls/fd-check-control.ts");



function initControls() {
    (new _fd_selector__WEBPACK_IMPORTED_MODULE_0__["default"]()).init();
    _fd_input_tokens__WEBPACK_IMPORTED_MODULE_1__["default"].sharedInstance.init();
    (new _fd_check_control__WEBPACK_IMPORTED_MODULE_2__["default"]()).init();
}


/***/ }),

/***/ "./src/controls/fd-input-tokens.ts":
/*!*****************************************!*\
  !*** ./src/controls/fd-input-tokens.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ FastDeployInputTokens)
/* harmony export */ });
class FastDeployInputTokens {
    constructor(token) {
        this.token = token;
        if (!this.token) {
            this.token = $('<div></div>', {
                'class': 'token'
            });
        }
    }
    static get sharedInstance() {
        return this._instance || (this._instance = new this(null));
    }
    init() {
        $('.token-input').on({
            keydown: this.inputTokenOnKeyDown,
            paste: this.inputTokenOnPaste
        });
    }
    inputTokenOnKeyDown(e) {
        let input = $(e.currentTarget);
        switch (e.keyCode) {
            case 13: // Enter
            case 188: // ,
                e.preventDefault();
                if (input.val() || input.val() != '') {
                    let tk = FastDeployInputTokens.sharedInstance.createToken(input.val());
                    tk.insertBefore(input);
                    //---
                    input.val('');
                }
                break;
            case 8: // Backspace
                if (!input.val() || input.val() == '') {
                    e.preventDefault();
                    input.prev('.token').remove();
                }
                break;
        }
    }
    inputTokenOnPaste(e) {
        var _a, _b, _c, _d, _e, _f;
        e.preventDefault();
        let input = e.currentTarget, text = e.originalEvent.clipboardData.getData('text');
        if (text === null || text === void 0 ? void 0 : text.length) {
            if (((_a = input.selectionEnd) !== null && _a !== void 0 ? _a : 0) > ((_b = input.selectionStart) !== null && _b !== void 0 ? _b : 0)) {
                text = `${input.value.substring(0, (_c = input.selectionStart) !== null && _c !== void 0 ? _c : 0)}${text}${input.value.substring((_d = input.selectionEnd) !== null && _d !== void 0 ? _d : 0)}`;
            }
            else {
                input.value.replace;
            }
            text = `${input.value}${text}`;
        }
        if ((text === null || text === void 0 ? void 0 : text.indexOf(',')) >= 0) {
            let arr = text.split(',');
            if (arr === null || arr === void 0 ? void 0 : arr.length) {
                for (let i = 0; i < arr.length - 1; i++) {
                    if ((_e = arr[i]) === null || _e === void 0 ? void 0 : _e.length) {
                        let tk = FastDeployInputTokens.sharedInstance.createToken(arr[i]);
                        tk.insertBefore(input);
                    }
                }
            }
            input.value = (_f = arr[arr.length - 1]) !== null && _f !== void 0 ? _f : '';
        }
    }
    createToken(text) {
        let tk = FastDeployInputTokens.sharedInstance.token.clone();
        tk.html(text);
        tk.append($('<i class="fa fa-xmark"></i>'));
        //---
        tk.children('i').on('click', function (e) {
            e.stopPropagation();
            $(e.currentTarget).parent().remove();
        });
        return tk;
    }
}


/***/ }),

/***/ "./src/controls/fd-selector.ts":
/*!*************************************!*\
  !*** ./src/controls/fd-selector.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ FastDeploySelector)
/* harmony export */ });
class FastDeploySelector {
    constructor() {
    }
    init() {
        this.createSelectContainer();
        $('.fd-select--button').on('click', function (e) {
            e.stopPropagation();
            let el = $(e.currentTarget), ul = el.parent().find('ul');
            el.toggleClass('focus');
            if (ul && ul.length) {
                ul.slideToggle();
            }
        });
        $('.fd-select--dropdown > li').on('click', function (e) {
            e.stopPropagation();
            let el = $(e.currentTarget), val = el.attr('data-value'), container = el.closest('.fd-select'), btn = container.children('.fd-select--button');
            if (btn && btn.length) {
                btn.html(el.html());
                btn.trigger('click');
                if (val) {
                    container.children('select').val(val);
                }
                if (!el.hasClass('selected')) {
                    container.find('li.selected').removeClass('selected');
                    el.addClass('selected');
                }
            }
        });
    }
    createSelectContainer() {
        $('.fd-select').each(function () {
            let selectEl = $(this);
            let container = $('<div></div>', {
                'class': selectEl.attr('class')
            });
            let btn = $('<a></a>', {
                'class': 'fd-select--button',
                'data-value': '',
                'html': selectEl.find('.selected').html()
            });
            let ul = $('<ul></ul>', {
                'class': 'fd-select--dropdown',
                'style': 'display: none;'
            });
            selectEl.attr('class', '');
            selectEl.hide();
            $.each(selectEl.children(), function () {
                let item = $(this), li = $('<li></li>', {
                    'class': item.attr('class'),
                    'data-value': item.val(),
                    'html': item.html()
                });
                ul.append(li);
            });
            container.append(btn);
            container.append(ul);
            container.append(selectEl.clone());
            selectEl.replaceWith(container);
        });
    }
}


/***/ }),

/***/ "./src/shared/fd-list.ts":
/*!*******************************!*\
  !*** ./src/shared/fd-list.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ FastDeployList)
/* harmony export */ });
class FastDeployList {
    constructor() { }
    initEvents() {
        $('.check-all').on('change', checkboxAllOnChange);
        $('tbody').find('[type="checkbox"]').on('change', checkboxItemOnChange);
    }
}
function checkboxAllOnChange(e) {
    e.stopPropagation();
    let el = e.currentTarget;
    if (el.checked) {
        let tbl = $(el).parents('table');
        tbl.find('[type="checkbox"]').prop('checked', true);
    }
    else {
        let tbl = $(el).parents('table');
        tbl.find('[type="checkbox"]').prop('checked', false);
    }
}
function checkboxItemOnChange(e) {
    e.stopPropagation();
    let tbl = $(e.currentTarget).parents('table'), cbxAll = tbl.find('.check-all'), tbody = tbl.find('tbody'), isCheckAll = true;
    if (cbxAll && cbxAll.length) {
        $.each(tbody.find('[type="checkbox"]'), function () {
            let cbx = this;
            if (!cbx.checked) {
                cbxAll[0].indeterminate = true;
                isCheckAll = false;
                return false;
            }
        });
        if (isCheckAll) {
            let cbx = cbxAll[0];
            cbx.indeterminate = false;
            cbx.checked = true;
        }
    }
}


/***/ }),

/***/ "./src/shared/fd-shared.ts":
/*!*********************************!*\
  !*** ./src/shared/fd-shared.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ FastDeployShared)
/* harmony export */ });
/* harmony import */ var _fd_sidebar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fd-sidebar */ "./src/shared/fd-sidebar.ts");
/* harmony import */ var _fd_topbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./fd-topbar */ "./src/shared/fd-topbar.ts");
/* harmony import */ var _fd_list__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fd-list */ "./src/shared/fd-list.ts");



class FastDeployShared {
    constructor() { }
    init() {
        (new _fd_sidebar__WEBPACK_IMPORTED_MODULE_0__["default"]()).init();
        (new _fd_topbar__WEBPACK_IMPORTED_MODULE_1__["default"]()).init();
        (new _fd_list__WEBPACK_IMPORTED_MODULE_2__["default"]()).initEvents();
    }
    static lostFocus() {
        _fd_sidebar__WEBPACK_IMPORTED_MODULE_0__["default"].lostFocus();
        _fd_topbar__WEBPACK_IMPORTED_MODULE_1__["default"].lostFocus();
    }
}


/***/ }),

/***/ "./src/shared/fd-sidebar.ts":
/*!**********************************!*\
  !*** ./src/shared/fd-sidebar.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ FastDeploySideBar)
/* harmony export */ });
class FastDeploySideBar {
    constructor() {
    }
    init() {
        // fix page reload when menu item click
        $('.menu-item > ul').toggle();
        //---
        $('#toggleLeftSideBar').on('click', toggleLeftSideBarOnClick);
        $('.menu-item > a').on('click', menuItemOnClick);
    }
    static lostFocus() {
        if ($('#leftSideBar').hasClass('closed')) {
            let expands = $('li[expand-sub-menu="true"]');
            expands.attr('expand-sub-menu', 'false');
            expands.find('ul').toggle();
        }
    }
}
function toggleLeftSideBarOnClick(e) {
    e.stopPropagation();
    let sideBar = $('#leftSideBar');
    if (sideBar.hasClass('closed')) {
        sideBar.animate({
            'width': '240px'
        }, function () {
            $('.left-side-bar--menu').removeClass('hide-arrow');
        });
        $('.dashboard-content').animate({
            'margin-left': '240px'
        });
        sideBar.removeClass('closed');
    }
    else {
        $('.left-side-bar--menu').addClass('hide-arrow');
        sideBar.animate({
            'width': '50px'
        }, function () {
            sideBar.addClass('closed');
        });
        $('.dashboard-content').animate({
            'margin-left': '50px'
        });
    }
    let expands = $('li[expand-sub-menu="true"]');
    expands.attr('expand-sub-menu', 'false');
    expands.find('ul').hide(300);
}
function menuItemOnClick(e) {
    e.stopPropagation();
    let el = $(e.currentTarget).closest('.menu-item'), expanded = el.attr('expand-sub-menu');
    if (expanded != 'true') {
        let expands = $('li[expand-sub-menu="true"]');
        expands.attr('expand-sub-menu', 'false');
        expands.find('ul').toggle();
    }
    let ul = el.find('ul');
    if (ul && ul.length) {
        if (el.attr('expand-sub-menu') == 'true') {
            el.attr('expand-sub-menu', 'false');
        }
        else {
            el.attr('expand-sub-menu', 'true');
        }
        ul.toggle();
    }
}


/***/ }),

/***/ "./src/shared/fd-topbar.ts":
/*!*********************************!*\
  !*** ./src/shared/fd-topbar.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ FastDeployTopBar)
/* harmony export */ });
class FastDeployTopBar {
    constructor() {
    }
    init() {
        $('.user-profile--button').on('click', userProfileOnClick);
    }
    static lostFocus() {
        $('.user-profile--menu').hide();
    }
}
function userProfileOnClick(e) {
    e.stopPropagation();
    $('.user-profile--menu').toggle();
}


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!***************************!*\
  !*** ./src/fastdeploy.ts ***!
  \***************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "initialize": () => (/* binding */ initialize)
/* harmony export */ });
/* harmony import */ var _shared_fd_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shared/fd-shared */ "./src/shared/fd-shared.ts");
/* harmony import */ var _controls_fd_controls__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./controls/fd-controls */ "./src/controls/fd-controls.ts");


class FastDeployModel {
    constructor() {
        this._selectorClass = "";
    }
    initialize() {
        (0,_controls_fd_controls__WEBPACK_IMPORTED_MODULE_1__.initControls)();
        //---
        (new _shared_fd_shared__WEBPACK_IMPORTED_MODULE_0__["default"]()).init();
        $(document).on('click', function (e) {
            e.stopPropagation();
            _shared_fd_shared__WEBPACK_IMPORTED_MODULE_0__["default"].lostFocus();
            $('.fd-select--button.focus').trigger('click');
        });
    }
}
function initialize() {
    let model = new FastDeployModel();
    model.initialize();
}

})();

FastDeploy = __webpack_exports__;
/******/ })()
;
//# sourceMappingURL=fastdeploy.min.js.map